// <auto-generated />
using E_Commerce_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Commerce_Project.Models.Products.Brand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Sony"
                        },
                        new
                        {
                            id = 2,
                            name = "Kodak"
                        },
                        new
                        {
                            id = 3,
                            name = "Panasonic"
                        },
                        new
                        {
                            id = 4,
                            name = "Nikon"
                        },
                        new
                        {
                            id = 5,
                            name = "Olympus"
                        },
                        new
                        {
                            id = 6,
                            name = "Fujifilm"
                        },
                        new
                        {
                            id = 7,
                            name = "Canon"
                        });
                });

            modelBuilder.Entity("E_Commerce_Project.Models.Products.Image", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("E_Commerce_Project.Models.Products.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("imageId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("productBrandId")
                        .HasColumnType("int");

                    b.Property<int>("productDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("productTechnoId")
                        .HasColumnType("int");

                    b.Property<int>("productTypeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("imageId");

                    b.HasIndex("productBrandId");

                    b.HasIndex("productDetailsId");

                    b.HasIndex("productTechnoId");

                    b.HasIndex("productTypeId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("E_Commerce_Project.Models.Products.ProductDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("isoMax")
                        .HasColumnType("int");

                    b.Property<int>("resolution")
                        .HasColumnType("int");

                    b.Property<bool>("stabilisator")
                        .HasColumnType("bit");

                    b.Property<string>("video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zoomOptic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("E_Commerce_Project.Models.Products.ProductType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ProductType");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Reflex"
                        },
                        new
                        {
                            id = 2,
                            name = "Hybride"
                        },
                        new
                        {
                            id = 3,
                            name = "Bridge"
                        },
                        new
                        {
                            id = 4,
                            name = "Compact"
                        });
                });

            modelBuilder.Entity("E_Commerce_Project.Models.Products.Techno", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Techno");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Numérique"
                        },
                        new
                        {
                            id = 2,
                            name = "Argentique"
                        },
                        new
                        {
                            id = 3,
                            name = "Instantanée"
                        },
                        new
                        {
                            id = 4,
                            name = "Jetable"
                        });
                });

            modelBuilder.Entity("E_Commerce_Project.Models.Users.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("streetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("streetNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("zipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("id");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            id = 1,
                            city = "Paris",
                            country = "France",
                            streetName = "rue de la Boétie",
                            streetNumber = "21",
                            zipCode = "75011"
                        });
                });

            modelBuilder.Entity("E_Commerce_Project.Models.Users.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("addressId")
                        .HasColumnType("int");

                    b.Property<int>("civility")
                        .HasColumnType("int");

                    b.Property<string>("emailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("addressId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addressId = 1,
                            civility = 0,
                            emailAddress = "jepim84@yahoo.fr",
                            firstName = "JP",
                            lastName = "M",
                            password = "toto",
                            role = 0
                        });
                });

            modelBuilder.Entity("E_Commerce_Project.Models.Products.Product", b =>
                {
                    b.HasOne("E_Commerce_Project.Models.Products.Image", "image")
                        .WithMany()
                        .HasForeignKey("imageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Project.Models.Products.Brand", "productBrand")
                        .WithMany()
                        .HasForeignKey("productBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Project.Models.Products.ProductDetails", "productDetails")
                        .WithMany()
                        .HasForeignKey("productDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Project.Models.Products.Techno", "productTechno")
                        .WithMany()
                        .HasForeignKey("productTechnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Project.Models.Products.ProductType", "productType")
                        .WithMany()
                        .HasForeignKey("productTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("image");

                    b.Navigation("productBrand");

                    b.Navigation("productDetails");

                    b.Navigation("productTechno");

                    b.Navigation("productType");
                });

            modelBuilder.Entity("E_Commerce_Project.Models.Users.Person", b =>
                {
                    b.HasOne("E_Commerce_Project.Models.Users.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("address");
                });
#pragma warning restore 612, 618
        }
    }
}
